{"version":3,"sources":["constants.js","utils/calc.js","utils/build-items.js","utils/drag.js","Box.js","App.js","serviceWorker.js","index.js"],"names":["OPS","+","x","y","-","×","÷","TYPES","getValue","items","some","item","type","value","didFindParens","didFindMultDiv","finalItems","Object","toConsumableArray","_loop","tempItems","ignoreUntilIdx","forEach","i","push","parenStart","parenEndIndex","slice","findIndex","parenEnd","map","_loop2","nextVal","randomInt","Math","ceil","random","pickRandom","floor","length","findAnAnswer","ints","ops","keys","every","op","includes","answer","console","log","build_items","shuffled","a","copy","j","_ref","shuffle","onDragOver","e","preventDefault","Box","children","draggable","onDragStart","onDrop","react_default","createElement","className","concat","onDragEnter","polyfill","buildItems","originalItems","originalAnswer","App","_useState","useState","_useState2","slicedToArray","setItems","_useState3","_useState4","setAnswer","_useState5","_useState6","drag","setDrag","_useState7","_useState8","canDrag","setCanDrag","didWin","useEffect","setTimeout","_buildItems3","_buildItems4","newItems","newAnswer","src_Box_0","el","target","key","stopPropagation","undefined","intIdx","swapInts","dropOp","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c90e611.chunk.js","sourcesContent":["const add = (x, y) => x + y;\nconst subtract = (x, y) => x - y;\nconst multiply = (x, y) => x * y;\nconst divide = (x, y) => x / y;\n\nexport const OPS = {\n  '+': add,\n  '-': subtract,\n  '×': multiply,\n  '÷': divide,\n};\n\nexport const TYPES = {\n  INT: 'int',\n  OP: 'op',\n  EQUALS: 'equals',\n  ANSWER: 'answer',\n};\n","/* eslint-disable no-loop-func */\nimport { OPS, TYPES } from '../constants';\n\nexport const getValue = (items) => {\n  const hasUndefinedOps = items.some(item => item.type === TYPES.OP && !OPS[item.value]);\n  if (hasUndefinedOps) return undefined;\n\n  let didFindParens = true;\n  let didFindMultDiv = true;\n  let finalItems = [...items];\n\n  while (didFindParens) {\n    const tempItems = [];\n    let ignoreUntilIdx = 0;\n    didFindParens = false;\n    finalItems.forEach((item, i) => {\n      if (!ignoreUntilIdx) {\n        if (item.parenStart) {\n          const parenEndIndex = i + finalItems.slice(i).findIndex(x => x.parenEnd);\n          ignoreUntilIdx = parenEndIndex + 1;\n          tempItems.push({\n            type: TYPES.INT,\n            value: getValue(finalItems.slice(i, parenEndIndex + 1).map((x) => {\n              delete x.parenStart;\n              delete x.parenEnd;\n              return x;\n            })),\n          });\n          didFindParens = true;\n        } else {\n          tempItems.push(item);\n        }\n      } else if (i >= ignoreUntilIdx) {\n        tempItems.push(item);\n      }\n    });\n    finalItems = tempItems;\n  }\n\n  while (didFindMultDiv) {\n    const tempItems = [];\n    let ignoreUntilIdx = 0;\n    didFindMultDiv = false;\n    finalItems.forEach((item, i) => {\n      if (!ignoreUntilIdx) {\n        const nextVal = finalItems[i + 1] && finalItems[i + 1].value;\n        if (nextVal === '×' || nextVal === '÷') {\n          tempItems.push({\n            type: TYPES.INT,\n            value: OPS[nextVal](item.value, finalItems[i + 2].value),\n          });\n          ignoreUntilIdx = i + 3;\n          didFindMultDiv = true;\n        } else {\n          tempItems.push(item);\n        }\n      } else if (i >= ignoreUntilIdx) {\n        tempItems.push(item);\n      }\n    });\n    finalItems = tempItems;\n  }\n\n  let value;\n\n  finalItems.forEach((item, i) => {\n    if (i === 0) {\n      value = item.value; // eslint-disable-line prefer-destructuring\n    } else if (OPS[item.value]) {\n      value = OPS[item.value](value, finalItems[i + 1].value);\n    }\n  });\n\n  return value;\n};\n\nexport default {\n  getValue,\n};\n","import { OPS, TYPES } from '../constants';\nimport { getValue } from './calc';\n\nconst NO_OP = '';\n\nconst randomInt = () => Math.ceil(Math.random() * 8) + 1;\n\nconst shuffle = (a) => {\n  const copy = [...a];\n  for (let i = copy.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [copy[i], copy[j]] = [copy[j], copy[i]];\n  }\n  return copy;\n};\n\nconst pickRandom = items => items[Math.floor(Math.random() * items.length)];\n\nconst findAnAnswer = (ints) => {\n  const ops = [\n    pickRandom(Object.keys(OPS)),\n    pickRandom(Object.keys(OPS)),\n    pickRandom(Object.keys(OPS)),\n  ];\n\n  if (ops.every(op => ['+', '-'].includes(op))) {\n    // It's no fun if everything is addition/subtraction\n    return false;\n  }\n\n  const answer = getValue([\n    {\n      type: TYPES.INT,\n      value: ints[0],\n    },\n    {\n      type: TYPES.OP,\n      value: ops[0],\n    },\n    {\n      type: TYPES.INT,\n      value: ints[1],\n    },\n    {\n      type: TYPES.OP,\n      value: ops[1],\n    },\n    {\n      type: TYPES.INT,\n      value: ints[2],\n    },\n    {\n      type: TYPES.OP,\n      value: ops[2],\n    },\n    {\n      type: TYPES.INT,\n      value: ints[3],\n    },\n  ]);\n\n  // answers must be whole nums between 1 and 40\n  if (answer % 1 !== 0 || answer < 1 || answer > 40) {\n    return false;\n  }\n\n  console.log('===Used ', [\n    ints[0],\n    ops[0],\n    ints[1],\n    ops[1],\n    ints[2],\n    ops[2],\n    ints[3],\n  ], 'to make ', answer);\n\n  return answer;\n};\n\nexport default () => {\n  const ints = [1, 2, 3, 4].map(randomInt);\n\n  let answer = findAnAnswer(ints);\n  while (!answer) {\n    answer = findAnAnswer(ints);\n  }\n\n  const shuffled = shuffle(ints);\n\n  return [\n    [\n      {\n        value: shuffled[0],\n        type: TYPES.INT,\n      },\n      {\n        value: NO_OP,\n        type: TYPES.OP,\n      },\n      {\n        value: shuffled[1],\n        type: TYPES.INT,\n      },\n      {\n        value: NO_OP,\n        type: TYPES.OP,\n      },\n      {\n        value: shuffled[2],\n        type: TYPES.INT,\n      },\n      {\n        value: NO_OP,\n        type: TYPES.OP,\n      },\n      {\n        value: shuffled[3],\n        type: TYPES.INT,\n      },\n    ],\n    answer,\n  ];\n};\n","export const onDragOver = (e) => {\n  e.preventDefault();\n};\n\nexport default {\n  onDragOver,\n};\n","import React from 'react';\nimport './Box.css';\n\nconst Box = ({\n  children,\n  draggable,\n  onDragOver,\n  onDragStart,\n  onDrop,\n  type,\n}) => (\n  <div\n    className={`box box--${type}`}\n    onDragEnter={onDragOver} /* for mobile polyfill */\n    onDragOver={onDragOver}\n    onDrop={onDrop}\n  >\n    <div\n      className=\"box-content\"\n      draggable={draggable}\n      onDragStart={onDragStart}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default Box;\n","import React, { useEffect, useState } from 'react';\nimport { polyfill } from 'mobile-drag-drop';\nimport './App.css';\n\nimport buildItems from './utils/build-items';\nimport { onDragOver } from './utils/drag';\nimport { getValue } from './utils/calc';\nimport { OPS, TYPES } from './constants';\nimport Box from './Box';\n\npolyfill();\nconst [originalItems, originalAnswer] = buildItems();\n\nconst App = () => {\n  const [items, setItems] = useState(originalItems);\n  const [answer, setAnswer] = useState(originalAnswer);\n  const [drag, setDrag] = useState({});\n  const [canDrag, setCanDrag] = useState(true);\n\n  const didWin = getValue(items) === answer;\n\n  useEffect(() => {\n    if (didWin) {\n      if (canDrag) {\n        setCanDrag(false);\n      } else {\n        setTimeout(\n          () => {\n            const [newItems, newAnswer] = buildItems();\n            setItems(newItems);\n            setAnswer(newAnswer);\n          },\n          1000,\n        );\n      }\n    } else if (!canDrag) {\n      setCanDrag(true);\n    }\n  });\n\n  const swapInts = (e, i, j) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (drag.intIdx === undefined) return;\n\n    const copy = [...items];\n    [copy[i], copy[j]] = [copy[j], copy[i]];\n    setItems(copy);\n  };\n\n  const dropOp = (e, i) => {\n    e.preventDefault();\n    const copy = [...items];\n    copy[i].value = drag.op;\n    setItems(copy);\n  };\n\n  const renderItem = (item, i) => {\n    if (item.type === TYPES.INT) {\n      return (\n        <Box\n          onDragOver={onDragOver}\n          onDrop={e => swapInts(e, drag.intIdx, i)}\n          key={i}\n          draggable={canDrag}\n          onDragStart={e => setDrag({ el: e.target, intIdx: i })}\n          type={item.type}\n        >\n          {item.value}\n        </Box>\n      );\n    }\n    return (\n      <Box\n        onDragOver={onDragOver}\n        onDrop={e => dropOp(e, i)}\n        key={i}\n        type={item.type}\n      >\n        {item.value}\n      </Box>\n    );\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"list list--op\">\n        {Object.keys(OPS).map(op => (\n          <Box\n            draggable={canDrag}\n            onDragStart={e => setDrag({ el: e.target, op })}\n            key={op}\n            type={TYPES.OP}\n          >\n            {op}\n          </Box>\n        ))}\n      </div>\n      <div className=\"list list--main\">\n        {items.map(renderItem)}\n        <Box type={TYPES.EQUALS}>=</Box>\n        <Box type={TYPES.ANSWER}>{answer}</Box>\n      </div>\n      <div>{didWin && 'You won!'}</div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}