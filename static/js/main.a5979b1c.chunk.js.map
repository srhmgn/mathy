{"version":3,"sources":["constants.js","utils/calc.js","utils/build-items.js","utils/drag.js","Box.js","App.js","serviceWorker.js","index.js"],"names":["OPS","+","x","y","-","×","÷","TYPES","getValue","values","op1","op2","op3","value","didFindMultDiv","finalValues","Object","toConsumableArray","_loop","tmpValues","ignoreUntilIdx","forEach","val","i","nextVal","push","randomInt","Math","ceil","random","pickRandom","items","floor","length","findAnAnswer","ints","ops","keys","every","op","includes","answer","build_items","map","shuffled","a","copy","j","_ref","shuffle","type","onDragOver","e","preventDefault","Box","children","draggable","onDragStart","onDrop","react_default","createElement","className","concat","App","_buildItems","buildItems","_buildItems2","slicedToArray","originalItems","originalAnswer","_useState","useState","_useState2","setItems","_useState3","_useState4","setAnswer","_useState5","_useState6","drag","setDrag","_useState7","_useState8","canDrag","setCanDrag","didWin","useEffect","setTimeout","_buildItems3","_buildItems4","newItems","newAnswer","src_Box_0","el","target","key","item","stopPropagation","undefined","intIdx","swapInts","dropOp","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a5979b1c.chunk.js","sourcesContent":["const add = (x, y) => x + y;\nconst subtract = (x, y) => x - y;\nconst multiply = (x, y) => x * y;\nconst divide = (x, y) => x / y;\n\nexport const OPS = {\n  '+': add,\n  '-': subtract,\n  '×': multiply,\n  '÷': divide,\n};\n\nexport const TYPES = {\n  INT: 'int',\n  OP: 'op',\n  EQUALS: 'equals',\n  ANSWER: 'answer',\n};\n","/* eslint-disable no-loop-func */\nimport { OPS } from '../constants';\n\nexport const getValue = (values) => {\n  const op1 = values[1];\n  const op2 = values[3];\n  const op3 = values[5];\n\n  if (!(OPS[op1] && OPS[op2] && OPS[op3])) {\n    return undefined;\n  }\n\n  let didFindMultDiv = true;\n  let finalValues = [...values];\n\n  while (didFindMultDiv) {\n    const tmpValues = [];\n    let ignoreUntilIdx = 0;\n    didFindMultDiv = false;\n    finalValues.forEach((val, i) => {\n      const nextVal = finalValues[i + 1];\n      if (!ignoreUntilIdx) {\n        if (nextVal === '×' || nextVal === '÷') {\n          tmpValues.push(OPS[nextVal](val, finalValues[i + 2]));\n          ignoreUntilIdx = i + 3;\n          didFindMultDiv = true;\n        } else {\n          tmpValues.push(val);\n        }\n      } else if (i >= ignoreUntilIdx) {\n        tmpValues.push(val);\n      }\n    });\n    finalValues = tmpValues;\n  }\n\n  let value;\n\n  finalValues.forEach((val, i) => {\n    if (i === 0) {\n      value = val;\n    } else if (OPS[val]) {\n      value = OPS[val](value, finalValues[i + 1]);\n    }\n  });\n\n  return value;\n};\n\nexport default {\n  getValue,\n};\n","import { OPS, TYPES } from '../constants';\nimport { getValue } from './calc';\n\nconst NO_OP = '';\n\nconst randomInt = () => Math.ceil(Math.random() * 8) + 1;\n\nconst shuffle = (a) => {\n  const copy = [...a];\n  for (let i = copy.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [copy[i], copy[j]] = [copy[j], copy[i]];\n  }\n  return copy;\n};\n\nconst pickRandom = items => items[Math.floor(Math.random() * items.length)];\n\nconst findAnAnswer = (ints) => {\n  const ops = [\n    pickRandom(Object.keys(OPS)),\n    pickRandom(Object.keys(OPS)),\n    pickRandom(Object.keys(OPS)),\n  ];\n\n  if (ops.every(op => ['+', '-'].includes(op))) {\n    // It's no fun if everything is addition/subtraction\n    return false;\n  }\n\n  const answer = getValue([\n    ints[0],\n    ops[0],\n    ints[1],\n    ops[1],\n    ints[2],\n    ops[2],\n    ints[3],\n  ]);\n\n  // answers must be whole nums between 1 and 40\n  if (answer % 1 !== 0 || answer < 1 || answer > 40) {\n    return false;\n  }\n\n  return answer;\n};\n\nexport default () => {\n  const ints = [1, 2, 3, 4].map(randomInt);\n\n  let answer = findAnAnswer(ints);\n  while (!answer) {\n    answer = findAnAnswer(ints);\n  }\n\n  const shuffled = shuffle(ints);\n\n  return [\n    [\n      {\n        value: shuffled[0],\n        type: TYPES.INT,\n      },\n      {\n        value: NO_OP,\n        type: TYPES.OP,\n      },\n      {\n        value: shuffled[1],\n        type: TYPES.INT,\n      },\n      {\n        value: NO_OP,\n        type: TYPES.OP,\n      },\n      {\n        value: shuffled[2],\n        type: TYPES.INT,\n      },\n      {\n        value: NO_OP,\n        type: TYPES.OP,\n      },\n      {\n        value: shuffled[3],\n        type: TYPES.INT,\n      },\n    ],\n    answer,\n  ];\n};\n","export const onDragOver = (e) => {\n  e.preventDefault();\n};\n\nexport default {\n  onDragOver,\n};\n","import React from 'react';\nimport './Box.css';\n\nconst Box = ({\n  children,\n  draggable,\n  onDragOver,\n  onDragStart,\n  onDrop,\n  type,\n}) => (\n  <div\n    className={`box box--${type}`}\n    onDragOver={onDragOver}\n    onDrop={onDrop}\n  >\n    <div\n      className=\"box-content\"\n      draggable={draggable}\n      onDragStart={onDragStart}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default Box;\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nimport buildItems from './utils/build-items';\nimport { onDragOver } from './utils/drag';\nimport { getValue } from './utils/calc';\nimport { OPS, TYPES } from './constants';\nimport Box from './Box';\n\nconst App = () => {\n  const [originalItems, originalAnswer] = buildItems();\n  const [items, setItems] = useState(originalItems);\n  const [answer, setAnswer] = useState(originalAnswer);\n  const [drag, setDrag] = useState({});\n  const [canDrag, setCanDrag] = useState(true);\n\n  const value = getValue(items.map(i => i.value));\n  const didWin = value === answer;\n\n  useEffect(() => {\n    if (didWin) {\n      if (canDrag) {\n        setCanDrag(false);\n      } else {\n        setTimeout(\n          () => {\n            const [newItems, newAnswer] = buildItems();\n            setItems(newItems);\n            setAnswer(newAnswer);\n          },\n          1000,\n        );\n      }\n    } else if (!canDrag) {\n      setCanDrag(true);\n    }\n  });\n\n  const swapInts = (e, i, j) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (drag.intIdx === undefined) return;\n\n    const copy = [...items];\n    [copy[i], copy[j]] = [copy[j], copy[i]];\n    setItems(copy);\n  };\n\n  const dropOp = (e, i) => {\n    e.preventDefault();\n    const copy = [...items];\n    copy[i].value = drag.op;\n    setItems(copy);\n  };\n\n  const renderItem = (item, i) => {\n    if (item.type === TYPES.INT) {\n      return (\n        <Box\n          onDragOver={onDragOver}\n          onDrop={e => swapInts(e, drag.intIdx, i)}\n          key={i}\n          draggable={canDrag}\n          onDragStart={e => setDrag({ el: e.target, intIdx: i })}\n          type={item.type}\n        >\n          {item.value}\n        </Box>\n      );\n    }\n    return (\n      <Box\n        onDragOver={onDragOver}\n        onDrop={e => dropOp(e, i)}\n        key={i}\n        type={item.type}\n      >\n        {item.value}\n      </Box>\n    );\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"list list--op\">\n        {Object.keys(OPS).map(op => (\n          <Box\n            draggable={canDrag}\n            onDragStart={e => setDrag({ el: e.target, op })}\n            key={op}\n            type={TYPES.OP}\n          >\n            {op}\n          </Box>\n        ))}\n      </div>\n      <div className=\"list list--main\">\n        {items.map(renderItem)}\n        <Box type={TYPES.EQUALS}>=</Box>\n        <Box type={TYPES.ANSWER}>{answer}</Box>\n      </div>\n      <div>{didWin && 'You won!'}</div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}